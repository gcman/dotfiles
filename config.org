* External Monitors
When I connect an external monitor, the screen is not properly sized. In
particular, the content on the external monitor is too zoomed in. To fix this, I
wrote an =xrandr= command.
#+BEGIN_SRC sh :tangle ~/.config/resize-desktop.sh :shebang #!/bin/sh
xrandr --output DP-1 --scale 2x2
xrandr --output HDMI-2 --off --output HDMI-1 --off --output DP-1 --mode 1920x1080 --pos 0x0 --rotate normal --output eDP-1 --primary --mode 3200x1800 --pos 352x2160 --rotate normal --output DP-2 --off
#+END_SRC
** Monitor Connected Hook
With this
#+BEGIN_SRC python :tangle /sudo::/etc/init.d/connect_screen_hook.py :shebang #!usr/bin/env python3
import subprocess
import time

connect_command = "~/.config/resize-desktop.sh"
disconnect_command = ""

while True:
    time.sleep(5)
    try:
        subprocess.Popen(["xrandr"])
    except:
        pass
    else:
        break


def get(cmd): return subprocess.check_output(cmd).decode("utf-8")


def count_screens(xr): return xr.count(" connected ")


def run_command(cmd): subprocess.Popen(["/bin/bash", "-c", cmd])


xr1 = None

while True:
    time.sleep(5)
    # second count
    xr2 = count_screens(get(["xrandr"]))
    # check if there is a change in the screen state
    if xr2 != xr1:
        if xr2 == 2:
            # command to run if connected (two screens)
            run_command(connect_command)
        elif xr2 == 1:
            # command to run if disconnected (one screen)
            # uncomment run_command(disconnect_command) to enable
            # then also comment out pass
            pass
            # run_command(disconnect_command)
    # set the second count as initial state for the next loop
    xr1 = xr2
#+END_SRC
